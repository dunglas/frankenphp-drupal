# Drupal with PostgreSQL
#
# Access via "https://localhost"
#
# During initial Drupal setup,
# Database type: PostgreSQL
# Database name: postgres
# Database username: postgres
# Database password: example
# ADVANCED OPTIONS; Database host: postgres

version: '3.1'

services:

  drupal:
    build: .
    volumes:
      - /app/public/modules
      - /app/public/profiles
      - /app/public/themes
      # this takes advantage of the feature in Docker that a new anonymous
      # volume (which is what we're creating here) will be initialized with the
      # existing content of the image at the same location
      - /app/public/sites
    restart: always
    environment:
      SERVER_NAME: :80
    labels:
      traefik.enable: true
      traefik.http.routers.frankenphp-drupal.entrypoints: https
      traefik.http.routers.frankenphp-drupal.rule: Host(`frankenphp-drupal.docker.so`)
      traefik.http.routers.frankenphp-drupal.tls: true
      traefik.http.services.frankenphp-drupal.loadbalancer.server.port: 80
      traefik.docker.network: stonehenge-network
    networks:
      - default
      - stonehenge-network

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: example
    restart: always
    networks:
      - default

networks:
  stonehenge-network:
    external: true
